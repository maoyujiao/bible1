package com.iyuba.CET4bible.listening;import android.os.Bundle;import android.support.annotation.Nullable;import android.text.TextUtils;import android.view.View;import android.widget.Button;import android.widget.EditText;import com.iyuba.CET4bible.R;import com.iyuba.CET4bible.manager.VersionManager;import com.iyuba.CET4bible.protocol.FeedBackJsonRequest;import com.iyuba.base.util.T;import com.iyuba.configation.Constant;import com.iyuba.core.listener.ProtocolResponse;import com.iyuba.core.manager.AccountManager;import com.iyuba.core.util.ExeProtocol;import com.iyuba.core.util.TextAttr;import com.iyuba.core.util.TouristUtil;import com.iyuba.core.widget.dialog.CustomDialog;import com.iyuba.core.widget.dialog.CustomToast;import com.iyuba.core.widget.dialog.WaittingDialog;import java.util.regex.Matcher;import java.util.regex.Pattern;/** * ErrorFeedbackActivity * 错题反馈 */public class ErrorFeedbackActivity extends com.iyuba.base.BaseActivity {    EditText etContact;    EditText etInfo;    EditText etQuestion;    Button btnSubmit;    private CustomDialog wettingDialog;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_feedback_question);        findViewById(R.id.button_back).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                onBackPressed();            }        });        etContact = findViewById(R.id.et_contact);        etInfo = findViewById(R.id.et_info);        etQuestion = findViewById(R.id.et_question);        btnSubmit = findViewById(R.id.btn_submit);        btnSubmit.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (check()) {                    request();                }            }        });        wettingDialog = WaittingDialog.showDialog(mContext);    }    private void request() {        String content = makeContent();        wettingDialog.show();        ExeProtocol.exe(new FeedBackJsonRequest(                        TextAttr.encode(content),                        etContact.getText().toString().trim(),                        AccountManager.Instace(mContext).getId()),                new ProtocolResponse() {                    @Override                    public void finish(com.iyuba.core.protocol.BaseHttpResponse bhr) {                        runOnUiThread(new Runnable() {                            @Override                            public void run() {                                wettingDialog.dismiss();                                CustomToast.showToast(mContext,                                        R.string.feedback_submit_success);                                ErrorFeedbackActivity.this.finish();                            }                        });                    }                    @Override                    public void error() {                        runOnUiThread(new Runnable() {                            @Override                            public void run() {                                wettingDialog.dismiss();                                CustomToast.showToast(mContext,                                        R.string.feedback_network_error);                            }                        });                    }                });    }    private String makeContent() {        String info = etInfo.getText().toString().trim();        String ques = etQuestion.getText().toString().trim();        String content = "听力错误题目:" + ques + ".错误原因:" + info + ".appversion:["                + VersionManager.VERSION_CODE + "]app:[" + Constant.APPName                + "]phone:[" + android.os.Build.BRAND                + android.os.Build.DEVICE + "]sysversion:["                + android.os.Build.VERSION.RELEASE + "]";        content = content.replace(" ", "");        return content;    }    private boolean check() {        String mail = etContact.getText().toString().trim();        String info = etInfo.getText().toString().trim();        String ques = etQuestion.getText().toString().trim();        if (TextUtils.isEmpty(ques)) {            T.showShort(mContext, "请填写必要信息");            etQuestion.setError("请填写");            return false;        }        if (TextUtils.isEmpty(info)) {            T.showShort(mContext, "请填写必要信息");            etInfo.setError("请填写");            return false;        }        if (AccountManager.Instace(mContext).checkUserLogin() && !TouristUtil.isTourist()) {        } else {            if (TextUtils.isEmpty(mail)) {                etContact.setError("请填写");                T.showShort(mContext, "请填写必要信息");                return false;            } else {                if (!emailCheck(mail)) {                    etContact.setError("请填写正确的邮箱格式");                    T.showShort(mContext, "请填写正确的邮箱格式");                    return false;                }            }        }        return true;    }    public boolean emailCheck(String email) {        String check = "^([a-z0-ArrayA-Z]+[-_|\\.]?)+[a-z0-ArrayA-Z]@([a-z0-ArrayA-Z]+(-[a-z0-ArrayA-Z]+)?\\.)+[a-zA-Z]{2,}$";        Pattern regex = Pattern.compile(check);        Matcher matcher = regex.matcher(email);        return matcher.matches();    }}